function(add_static_analysis_target TOOL_NAME TOOL_EXECUTABLE_PATH ARGUMENTS)
    get_all_libraries(LIBS)
    set(TOOL_TARGETS "")
    foreach(LIB ${LIBS})
        get_directory_property(LIB_TARGETS DIRECTORY ${CMAKE_SOURCE_DIR}/libs/${LIB} BUILDSYSTEM_TARGETS)
        get_target_property(LIB_SOURCES ${LIB} SOURCES)
        list(FIND LIB_TARGETS ${LIB}_tests LIB_TEST_FOUND)
        if(NOT (LIB_TEST_FOUND EQUAL -1))
            get_target_property(LIB_TEST_SOURCES ${LIB}_tests SOURCES)
            list(APPEND LIB_SOURCES ${LIB_TEST_SOURCES})
        endif()
        PREPEND(LIB_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/libs/${LIB}" ${LIB_SOURCES})
        add_custom_target(${TOOL_NAME}_${LIB} COMMAND ${TOOL_EXECUTABLE_PATH} ${ARGUMENTS} ${LIB_SOURCES})
        list(APPEND TOOL_TARGETS "${TOOL_NAME}_${LIB}")
        set_target_properties(${TOOL_NAME}_${LIB} PROPERTIES FOLDER static_analysis/${TOOL_NAME})
    endforeach()
    get_all_apps(APPS)
    foreach(APP ${APPS})
        get_target_property(APP_SOURCES ${APP} SOURCES)
        PREPEND(APP_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/apps/${APP}" ${APP_SOURCES})
        add_custom_target(${TOOL_NAME}_${APP} COMMAND ${TOOL_EXECUTABLE_PATH} ${ARGUMENTS} ${APP_SOURCES})
        list(APPEND TOOL_TARGETS "${TOOL_NAME}_${APP}")
        set_target_properties(${TOOL_NAME}_${APP} PROPERTIES FOLDER static_analysis/${TOOL_NAME})
    endforeach()
    add_custom_target(${TOOL_NAME} COMMAND "" DEPENDS ${TOOL_TARGETS})
    set_target_properties(${TOOL_NAME} PROPERTIES FOLDER static_analysis/${TOOL_NAME})
endfunction(add_static_analysis_target)

function(add_cpd_target)
    find_package(Java COMPONENTS Runtime REQUIRED)
    get_all_libraries(LIBS)
    PREPEND(LIBS "${CMAKE_SOURCE_DIR}/libs" ${LIBS})
    set(ARGUMENTS --minimum-tokens 50 --language cpp --encoding utf-8 --format xml --exclude ${CMAKE_SOURCE_DIR}/libs/AudioFile/src/AudioFile.cpp --files ${LIBS})
    add_custom_target(cpd COMMAND ${CPD_EXECUTABLE} ${ARGUMENTS})
    set_target_properties(cpd PROPERTIES FOLDER static_analysis/cpd)
endfunction(add_cpd_target)
